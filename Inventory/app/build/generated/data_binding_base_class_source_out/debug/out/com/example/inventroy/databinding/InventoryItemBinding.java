// Generated by view binder compiler. Do not edit!
package com.example.inventroy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventroy.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InventoryItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton arrowButton;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final ConstraintLayout itemCardActions;

  @NonNull
  public final ConstraintLayout itemCardHeader;

  @NonNull
  public final TextView itemQuantity;

  @NonNull
  public final TextView itemQuantityUnits;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final MaterialButton updateButton;

  private InventoryItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton arrowButton,
      @NonNull MaterialCardView card, @NonNull MaterialButton deleteButton,
      @NonNull ConstraintLayout itemCardActions, @NonNull ConstraintLayout itemCardHeader,
      @NonNull TextView itemQuantity, @NonNull TextView itemQuantityUnits,
      @NonNull TextView itemTitle, @NonNull MaterialButton updateButton) {
    this.rootView = rootView;
    this.arrowButton = arrowButton;
    this.card = card;
    this.deleteButton = deleteButton;
    this.itemCardActions = itemCardActions;
    this.itemCardHeader = itemCardHeader;
    this.itemQuantity = itemQuantity;
    this.itemQuantityUnits = itemQuantityUnits;
    this.itemTitle = itemTitle;
    this.updateButton = updateButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InventoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InventoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inventory_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InventoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowButton;
      ImageButton arrowButton = ViewBindings.findChildViewById(rootView, id);
      if (arrowButton == null) {
        break missingId;
      }

      id = R.id.card;
      MaterialCardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      MaterialButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.itemCardActions;
      ConstraintLayout itemCardActions = ViewBindings.findChildViewById(rootView, id);
      if (itemCardActions == null) {
        break missingId;
      }

      id = R.id.itemCardHeader;
      ConstraintLayout itemCardHeader = ViewBindings.findChildViewById(rootView, id);
      if (itemCardHeader == null) {
        break missingId;
      }

      id = R.id.itemQuantity;
      TextView itemQuantity = ViewBindings.findChildViewById(rootView, id);
      if (itemQuantity == null) {
        break missingId;
      }

      id = R.id.itemQuantityUnits;
      TextView itemQuantityUnits = ViewBindings.findChildViewById(rootView, id);
      if (itemQuantityUnits == null) {
        break missingId;
      }

      id = R.id.itemTitle;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.updateButton;
      MaterialButton updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      return new InventoryItemBinding((ConstraintLayout) rootView, arrowButton, card, deleteButton,
          itemCardActions, itemCardHeader, itemQuantity, itemQuantityUnits, itemTitle,
          updateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
